var __pr = null;
try {
    __pr = require('probabilistic/index');
} catch (e) {
    __pr = require('./probabilistic/index');
}
__pr.openModule(__pr);
var __ch = null;
var builtin_id = "traced_builtins";
try {
    __ch = require(builtin_id);
} catch (e) {
    __ch = require('./' + builtin_id);
}
openModule(__ch);
enterfn(0);
var call0 = _const(3.141592653589793);
leavefn();
var my_45pi = call0;
var glp = function (mean, ssq, smp) {
    enterfn(14);
    var call14 = minus(smp, mean);
    leavefn();
    enterfn(15);
    var call15 = function (diff) {
            enterfn(1);
            var call1 = mult(diff, diff);
            leavefn();
            enterfn(2);
            var call2 = _const(2);
            leavefn();
            enterfn(3);
            var call3 = mult(call2, ssq);
            leavefn();
            enterfn(4);
            var call4 = div(call1, call3);
            leavefn();
            enterfn(5);
            var call5 = minus(call4);
            leavefn();
            enterfn(6);
            var call6 = _const(0.5);
            leavefn();
            enterfn(7);
            var call7 = _const(2);
            leavefn();
            enterfn(8);
            var call8 = log(call7);
            leavefn();
            enterfn(9);
            var call9 = log(my_45pi);
            leavefn();
            enterfn(10);
            var call10 = log(ssq);
            leavefn();
            enterfn(11);
            var call11 = plus(call8, call9, call10);
            leavefn();
            enterfn(12);
            var call12 = mult(call6, call11);
            leavefn();
            enterfn(13);
            var call13 = minus(call5, call12);
            leavefn();
            return call13;
        }(call14);
    leavefn();
    return call15;
};
var randint = function (l, h) {
    enterfn(16);
    var call16 = _const(1);
    leavefn();
    enterfn(17);
    var call17 = minus(h, l);
    leavefn();
    enterfn(18);
    var call18 = plus(call16, call17);
    leavefn();
    enterfn(19);
    var call19 = wrapped_random_integer(call18);
    leavefn();
    enterfn(20);
    var call20 = plus(l, call19);
    leavefn();
    return call20;
};
var index_45in = function (x, xs) {
    var loop = function (x, k, rst) {
        return function () {
            enterfn(21);
            var call21 = is_null(rst);
            leavefn();
            return call21;
        }() ? k : function () {
            return function () {
                enterfn(22);
                var call22 = first(rst);
                leavefn();
                enterfn(23);
                var call23 = is_equal(call22, x);
                leavefn();
                return call23;
            }() ? k : function () {
                enterfn(24);
                var call24 = _const(1);
                leavefn();
                enterfn(25);
                var call25 = plus(k, call24);
                leavefn();
                enterfn(26);
                var call26 = rest(rst);
                leavefn();
                enterfn(27);
                var call27 = loop(x, call25, call26);
                leavefn();
                return call27;
            }();
        }();
    };
    enterfn(28);
    var call28 = _const(0);
    leavefn();
    enterfn(29);
    var call29 = loop(x, call28, xs);
    leavefn();
    return call29;
};
var my_45length = function (xs) {
    return function () {
        enterfn(30);
        var call30 = is_null(xs);
        leavefn();
        return call30;
    }() ? function () {
        enterfn(31);
        var call31 = _const(0);
        leavefn();
        return call31;
    }() : function () {
        enterfn(32);
        var call32 = _const(1);
        leavefn();
        enterfn(33);
        var call33 = rest(xs);
        leavefn();
        enterfn(34);
        var call34 = my_45length(call33);
        leavefn();
        enterfn(35);
        var call35 = plus(call32, call34);
        leavefn();
        return call35;
    }();
};
var data_45loop = function (n) {
    return function () {
        enterfn(36);
        var call36 = _const(51);
        leavefn();
        enterfn(37);
        var call37 = eq(n, call36);
        leavefn();
        return call37;
    }() ? function () {
        enterfn(38);
        var call38 = _const([null]);
        leavefn();
        return call38;
    }() : function () {
        enterfn(39);
        var call39 = list(n, n);
        leavefn();
        enterfn(40);
        var call40 = _const(1);
        leavefn();
        enterfn(41);
        var call41 = plus(n, call40);
        leavefn();
        enterfn(42);
        var call42 = data_45loop(call41);
        leavefn();
        enterfn(43);
        var call43 = pair(call39, call42);
        leavefn();
        return call43;
    }();
};
enterfn(44);
var call44 = _const(0);
leavefn();
enterfn(45);
var call45 = data_45loop(call44);
leavefn();
var data = call45;
enterfn(46);
var call46 = map(first, data);
leavefn();
enterfn(47);
var call47 = sum(call46);
leavefn();
enterfn(48);
var call48 = my_45length(data);
leavefn();
enterfn(49);
var call49 = div(call47, call48);
leavefn();
var xbar = call49;
var make_45sample = function () {
    enterfn(50);
    var call50 = _const(0);
    leavefn();
    enterfn(51);
    var call51 = _const(10000);
    leavefn();
    enterfn(52);
    var call52 = wrapped_gaussian(call50, call51);
    leavefn();
    var alpha = call52;
    enterfn(53);
    var call53 = _const(0);
    leavefn();
    enterfn(54);
    var call54 = _const(10000);
    leavefn();
    enterfn(55);
    var call55 = wrapped_gaussian(call53, call54);
    leavefn();
    var wrapped_beta = call55;
    enterfn(56);
    var call56 = _const(0);
    leavefn();
    enterfn(57);
    var call57 = _const(10000);
    leavefn();
    enterfn(58);
    var call58 = wrapped_gaussian(call56, call57);
    leavefn();
    enterfn(59);
    var call59 = abs(call58);
    leavefn();
    var tau = call59;
    var gauss_45factor = function (m, v, x) {
        enterfn(60);
        var call60 = glp(m, v, x);
        leavefn();
        enterfn(61);
        var call61 = factor(call60);
        leavefn();
        return call61;
    };
    enterfn(70);
    var call70 = map(function (xy) {
            enterfn(62);
            var call62 = first(xy);
            leavefn();
            enterfn(63);
            var call63 = minus(call62, xbar);
            leavefn();
            enterfn(64);
            var call64 = mult(wrapped_beta, call63);
            leavefn();
            enterfn(65);
            var call65 = plus(alpha, call64);
            leavefn();
            enterfn(66);
            var call66 = _const(1);
            leavefn();
            enterfn(67);
            var call67 = div(call66, tau);
            leavefn();
            enterfn(68);
            var call68 = second(xy);
            leavefn();
            enterfn(69);
            var call69 = gauss_45factor(call65, call67, call68);
            leavefn();
            return call69;
        }, data);
    leavefn();
    var y_45constrs = call70;
    enterfn(71);
    var call71 = _const(1);
    leavefn();
    enterfn(72);
    var call72 = _const(0.5);
    leavefn();
    enterfn(73);
    var call73 = expt(tau, call72);
    leavefn();
    enterfn(74);
    var call74 = div(call71, call73);
    leavefn();
    enterfn(75);
    var call75 = list(alpha, wrapped_beta, call74, tau);
    leavefn();
    var sample = call75;
    return sample;
};
enterfn(76);
var call76 = make_45sample();
leavefn();
call76;
console.log(dump_trace());
